@model List<Onion.Application.Model.DTO_s.FAQ_DTO>

<div class="container">
    <h2 class="admin-title">📝 Cevaplanmamış Sorular</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="card">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Soru</th>
                    <th>İşlem</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var faq in Model)
                {
                    <tr>
                        <td>@faq.Question</td>
                        <td>
                            <form class="answer-form" data-faq-id="@faq.FAQID">
                                <div class="form-group">
                                    <textarea name="answer" class="form-control" placeholder="Cevabınızı yazın" required></textarea>
                                </div>
                                <button type="submit" class="btn btn-gradient">Cevapla</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>



<script>
    document.querySelectorAll(".answer-form").forEach(form => {
        form.addEventListener("submit", function (event) {
            event.preventDefault();

            let faqId = this.getAttribute("data-faq-id");
            let answer = this.querySelector("[name=answer]").value;

            fetch("/CustomerServicePanel/FAQ/AnswerFAQ?faqId=" + faqId + "&customerServiceId=1&answer=" + encodeURIComponent(answer), {
                method: "PUT"
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    // Cevaplanan soruyu tabloda gizle
                    this.closest('tr').style.display = 'none';
                })
                .catch(error => console.error("Hata:", error));
        });
    });
</script>

<style>
    body {
        background-color: #eaf6fd; /* Pastel mavi tonu */
        color: #333;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .admin-title {
        background-color: yellow;
        color: black;
        padding: 15px 25px;
        border-radius: 10px;
        border: 2px solid black;
        text-align: center;
        font-weight: bold;
        font-size: 24px;
        margin: 20px auto;
        display: block;
        width: fit-content;
    }

    .card {
        background: white;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        text-align: center;
    }

    .table {
        margin-top: 20px;
        border-radius: 10px;
        overflow: hidden;
    }

        .table thead {
            background: yellow;
            color: black;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1;
        }

    .btn-gradient {
        background: linear-gradient(45deg, black, #fad0c4);
        border: none;
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        transition: all 0.3s ease-in-out;
        font-weight: bold;
    }

        .btn-gradient:hover {
            transform: scale(1.1);
            filter: brightness(1.2);
        }
</style>
